Week 9 Structures , Unions

structure : เป็นการเก็บค่าหลายค่าไว้ในตัวแปรเดียวมีการทำงานคล้ายข้อมูลอยู่ในกล่อง อาจจะคนละประเภทของข้อมูลหรือเป็นอาเรย์ก็ได้ ซึ่ง structure ก็สามารถกำหนดให้เป็นอาเรย์ได้เหมือนกัน ชื่อสมาชิกใน structure เดียวกันห้ามซ้ำกัน แต่สามารถซ้ำกันใน structure อื่นได้ ถ้ากำหนดค่าน้อยกว่าที่ประกาศสมาชิกใน structure ค่าที่ไม่ได้กำหนดจะมีค่าเป็น 0 หรือ NULL สำหรับ pointer สามารถ passing ค่าได้เหมือนตัวแปรเลยจะคล้ายๆกัน
  struct card {
      char *face ;
      double num ;
  } ;
  struct employee { int hour, min; } ;
  วิธีกำหนด structure ให้เหมือนกันสามารถกำหนดได้แบบนี้ เช่น
  struct card aCard1 = aCard2 ;
  การเข้าถึงสมาชิกแต่ละฟิลด์ทำได้โดยใช้ . ( dot operator ) หรือสามารถใช้ -> ( structure pointer operator / arrow operator ) เพื่อเข้าถึงฟิลด์ได้ด้วย
structure tag : เป็นชื่อ structure ไม่จำเป็นต้องมีก็ได้ เพราะเวลาใช้เราอาจจะตั้งชื่อ structure ใหม่เหมือนเวลาตั้งชื่อตัวแปรปกติ
self references : structure สามารถเรียกใช้ตัวเองได้ภายใน structure ในกรณีที่ประกาศตัวแปรเป็น pointer เท่านั้น
storage in memory : ไม่สามารถใช้ operator == กับ != ได้ เนื่องจากสมาชิกภายใน structure อาจจะไม่ได้อยู่ใน memory ที่สัมพันธ์กัน มีการเก็บข้อมูลที่มีค่าแน่นอน และวิธีการเก็บคำใน memory จะมีการเก็บแบบทีละ 2 หรือ 4 bytes
  struct example {
      char c ;
       int i ;
  } sample1, sample2 ;
  byte 0             1             2             3             4             5             6             7
         01100001                                              00000000 00000000 00000000 01100001
typedef : ใช้กำหนดประเภทข้อมูลเพิ่มเติมได้ กรณีของ struct ก็เช่นกัน
union : คล้ายกับ structure คือมีสมาชิกที่ใช้พื้นที่การทำงานร่วมกัน แบ่งปันพื้นที่แทนการเสียที่เก็บข้อมูลในตัวแปรที่ไม่ได้ใช้งาน สมาชิกเป็นประเภทของข้อมูลอะไรก็ได้ จำนวน byte ที่จะเก็บ union ต้องมีอย่างน้อยที่จะเก็บข้อมูลสมาชิกที่มีการใช้พื้นที่มากที่สุด
definition : union อาจจะเริ่มต้นด้วยข้อมูลประเภทเดียวกันกับประเภทของข้อมูลสมาชิกตัวแรก
enumeration : หรือ enum ใช้กำหนดค่าคงที่ให้กับตัวแปรตามลำดับ โดยใช้ตั้งค่าให้กับสมาชิกในตัวแปรอีกทีนึง 
  enum alphabet { A = 1, B, C } ;
  enum นี้ค่าจะเริ่มจาก 1 2 3 ตามลำดับ